function cuadradoR(matrix){tot=matrix[0].length;var cuadrada=new Array(tot);for(i=0;i<tot;i++){cuadrada[i]=new Array(tot);} for(i=0;i<tot;i++){for(j=0;j<tot;j++){for(k=0;k<tot;k++){cuadrada[i][j]=cuadrada[i][j]||(matrix[i][k]&&matrix[k][j]);}}} return cuadrada;} function esReflexiva(matrix){tot=matrix[0].length;for(i=0;i<tot;i++){for(j=0;j<tot;j++){if(i==j){if(matrix[i][j]=="0"){return false;}}}} return true;} function esSimetrica(matrix){tot=matrix[0].length;for(i=0;i<tot;i++){for(j=0;j<tot;j++){if(matrix[i][j]=="1"){if(matrix[j][i]!="1"){return false;}}}} return true;} function puedoEvaluarTransitiva(matrix){tot=matrix[0].length;var guardaPrimerElemento=new Array(tot);var guardaSegundoElemento=new Array(tot);for(i=0;i<tot;i++){guardaSegundoElemento[i]=0;guardaPrimerElemento[i]=0;} for(i=0;i<tot;i++){for(j=0;j<tot;j++){if(matrix[i][j]=="1"){if(i==j){guardaPrimerElemento[i]=0.5;guardaSegundoElemento[j]=0.5;}else{guardaPrimerElemento[i]=1;guardaSegundoElemento[j]=1;}}}} for(i=0;i<tot;i++){if((guardaPrimerElemento[i]+guardaSegundoElemento[i])>1){return true;}} return false;} function esTransitiva(matrix){tot=matrix[0].length;var aux=new Array(tot);for(i=0;i<tot;i++){aux[i]=new Array(tot);} aux=cuadradoR(matrizABooleano(matrix));for(i=0;i<tot;i++){for(j=0;j<tot;j++){if((aux)[i][j]==true){if(matrix[i][j]!="1"){return false;}}}} return true;}